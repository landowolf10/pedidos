Tablas:
CREATE TABLE IF NOT EXISTS usuarios
(
    id 					INT AUTO_INCREMENT,
    email		        VARCHAR(100) NOT NULL,
    nombre 			 	VARCHAR(30) NOT NULL,
    apellido_paterno 	VARCHAR(30) NOT NULL,
    apellido_materno 	VARCHAR(30) NOT NULL,
    telefono 			VARCHAR(10),
    estado				VARCHAR(30),
    ciudad				VARCHAR(30),
    colonia				VARCHAR(30),
    calle				VARCHAR(30),
    numero				VARCHAR(30),
    pass				VARCHAR(20),
    tipo_usuario		VARCHAR(30),
    firebase_token		VARCHAR(200),
    PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS status_pedido
(
    id 					INT AUTO_INCREMENT,
    pedido_realizado	VARCHAR(500) NOT NULL,
    total_pagar         DECIMAL(10, 2) NOT NULL,
    id_cliente			INT NOT NULL,
    nombre_cliente		VARCHAR(100) NOT NULL,
    telefono_cliente 	VARCHAR(10)  NOT NULL,
    colonia				VARCHAR(30)  NOT NULL,
    calle				VARCHAR(30)  NOT NULL,
    numero				VARCHAR(30)  NOT NULL,
    estatus				INT,
    PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS productos
(
    id 			INT AUTO_INCREMENT,
    nombre		VARCHAR(300)   NOT NULL,
    categoria   VARCHAR(100)   NOT NULL,
    precio		DECIMAL(10, 2) NOT NULL,
    imagen		VARCHAR(200)   NOT NULL,
    PRIMARY KEY (id)
);


Procedimientos almacenados:
1. Procedimiento almacenado para iniciar sesión y verificar token del dispositivo.
DELIMITER //
CREATE PROCEDURE login
( 
    IN email_u	VARCHAR(100),
    IN pass_u 	VARCHAR(20),
    IN token	VARCHAR(200)
)
BEGIN
	SELECT * 
    FROM usuarios
    WHERE email = email_u AND pass = pass_u;
    
    IF NOT EXISTS
    (
    	SELECT u.firebase_token
        FROM usuarios AS u
        WHERE email = email_u AND pass = pass_u
    ) THEN
    	INSERT INTO usuarios (email, pass, firebase_token)  VALUES
		(email_u, pass_u, token);
    ELSE
    	UPDATE usuarios SET firebase_token = token
        WHERE email = email_u AND pass = pass_u;
	END IF;
END//
DELIMITER ;

CALL login('orlando.avilag@hotmail.com', 'landowolf10', 'cXN_ooG9vhg:APA91bEeYsjkAW_rPgoPUXBPN6HFFXiq4SzVosz84czLU_rCNxUpHA-9UEGwJVVgq2vcS6mYxw6_hsm691YOAnChhAAuo4DOBxzggbNn1y5Tn4rAoVWvy_RqIPUXcd4IFk6lQcTQyY0z')


2. Procedimiento almacenado para insertar en la tabla usuarios.
DELIMITER //
CREATE PROCEDURE insertar_usuario
( 
    IN email_u		VARCHAR(100),
    IN nombre_u 	VARCHAR(30),
    IN apellido_p 	VARCHAR(30),
    IN apellido_m 	VARCHAR(30),
    IN tel 			VARCHAR(10), 
    IN estado_u 	VARCHAR(30), 
    IN ciudad_u 	VARCHAR(30), 
    IN colonia_u 	VARCHAR(30),
    IN calle_u		VARCHAR(30),
    IN numero_u 	VARCHAR(30),
    IN pass_u		VARCHAR(20),
    IN tipo_u		VARCHAR(30),
    IN token		VARCHAR(200)
)
BEGIN
	INSERT INTO usuarios (email, nombre, apellido_paterno, apellido_materno, telefono, estado, ciudad, colonia, calle, numero, pass, tipo_usuario, firebase_token)  VALUES
	(email_u, nombre_u, apellido_p, apellido_m, tel, estado_u, ciudad_u, colonia_u, calle_u, numero_u, pass_u, tipo_u, token);
END//
DELIMITER ;

CALL insertar_usuario("orlando.avilag@hotmail.com", "Luis Orlando", "Avila", "Garcia", "5564191682", "CDMX", "Ciudad de México", "Las Cruces", "Ahuatla", "S/N", "landowolf10",  "Cliente", "YGAd87897davguf78JDf8567")



3. Procedimiento almacenado para realizar un pedido.
DELIMITER //
CREATE PROCEDURE realizar_pedido
( 
    IN pedido		VARCHAR(500),
    IN total		DECIMAL(10, 2),
    IN id_c			INT,
    IN nombre 		VARCHAR(100),
    IN telefono		VARCHAR(10),
    IN colonia_c	VARCHAR(30),
    IN calle_c		VARCHAR(30),
    IN numero_c		VARCHAR(30),
    IN estatus_p	INT
)
BEGIN
	INSERT INTO status_pedido(pedido_realizado, total_pagar, id_cliente, nombre_cliente, telefono_cliente, colonia, calle, numero, estatus)
    VALUES(pedido, total, id_c, nombre, telefono, colonia_c, calle_c, numero_c, estatus_p);
END//
DELIMITER ;


CALL realizar_pedido('Hamburguesa con papas, Yoli de 600 ml', 125, 1, 'Luis Orlando Avila Garcia', '5564191682', 'Las Cruces', 'Ahuatla', 'S/N', 0)



4. Procedimiento almacenado para actualizar el status del pedido.
DELIMITER //
CREATE PROCEDURE actualizar_pedido
( 
    IN id_c   		INT,
    IN estatus_p	INT
)
BEGIN
	UPDATE status_pedido SET estatus = estatus_p
    WHERE id_cliente = id_c;
END//
DELIMITER ;



5. Procedimiento almacenado para registrar productos.
DELIMITER //
CREATE PROCEDURE insertar_producto
( 
    IN nombre_producto		VARCHAR(300),
    IN categoria_producto	VARCHAR(100),
    IN precio_producto		DECIMAL(10, 2),
    IN imagen_producto 		VARCHAR(200)
)
BEGIN
	INSERT INTO productos(nombre, categoria, precio, imagen)
    VALUES(nombre_producto, categoria_producto, precio_producto, imagen_producto);
END//
DELIMITER ;

CALL insertar_producto('Yoli', 'Bebida', 12, 'imagen.jpg')